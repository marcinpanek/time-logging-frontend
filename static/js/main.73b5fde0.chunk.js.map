{"version":3,"sources":["components/BootstrapReactTable.tsx","components/LoggingDataWrapper.tsx","pages/TimeLoggingPage.tsx","components/NavBar.tsx","pages/HomePage.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BootstrapReactTable","columns","data","useTable","initialState","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","Table","responsive","striped","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Pagination","First","onClick","disabled","Prev","Next","Last","length","InputGroup","className","FormControl","placeholder","aria-label","type","defaultValue","style","width","onChange","e","target","value","Number","key","LoggingDataWrapper","useMemo","projectTitle","userName","timeLogged","Header","accessor","TimeLoggingPage","NavBar","Navbar","expand","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","to","href","HomePage","Footer","src","alt","height","App","basename","process","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73b5fde0.chunk.js","sourcesContent":["import React from 'react';\nimport { useTable, usePagination, Column } from 'react-table';\nimport { Table, Pagination, InputGroup, FormControl } from 'react-bootstrap';\n\ninterface BootstrapReactTableProps {\n    columns: Column<any>[],\n    data: any[]\n}\n\nexport const BootstrapReactTable: React.FC<BootstrapReactTableProps> = ({ columns, data }) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize },\n    } = useTable({ columns, data, initialState: { pageIndex: 0 } }, usePagination);\n\n    return (\n        <>\n            <Table responsive striped bordered hover size=\"sm\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {page.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => (\n                                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                ))}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n            <Pagination size=\"sm\">\n                <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage} />\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\n                <Pagination.Last onClick={() => gotoPage(pageCount! - 1)} disabled={!canNextPage} />\n                <span>\n                    Page\n                    <strong>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </strong>\n                </span>\n                | Go to page:\n                <span>\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"Select Page\"\n                            aria-label=\"select page\"\n                            type=\"number\"\n                            defaultValue={'' + pageIndex + 1}\n                            style={{ width: '50px' }}\n                            onChange={(e: any) => {\n                                const page = e.target.value ? Number(e.target.value) - 1 : 0\n                                gotoPage(page)\n                            }}\n                        />\n                    </InputGroup>\n                </span>\n                <select\n                    className=\"form-control form-control-sm\"\n                    value={pageSize}\n                    style={{ width: '100px' }}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value))\n                    }}\n                >\n                    {[10, 25, 50].map(pageSize => (\n                        <option key={pageSize} value={pageSize}>\n                            Show {pageSize}\n                        </option>\n                    ))}\n                </select>\n            </Pagination>\n        </>\n    )\n}\n\nexport default BootstrapReactTable;","import React, { useMemo } from 'react';\nimport { Column } from 'react-table';\nimport BootstrapReactTable from './BootstrapReactTable';\n\ninterface TableData {\n    projectTitle: string,\n    userName: string,\n    timeLogged: string\n}\n\nexport const LoggingDataWrapper: React.FC = () => {\n    const data: TableData[] = useMemo(\n        () => [\n            { projectTitle: 'Logging App', userName: '0', timeLogged: '0d3h0m1' },\n            { projectTitle: 'Logging App', userName: '1', timeLogged: '0d3h0m2' },\n            { projectTitle: 'Logging App', userName: '3', timeLogged: '0d3h0m3' },\n            { projectTitle: 'Logging App', userName: '4', timeLogged: '0d3h0m4' },\n            { projectTitle: 'Logging App', userName: '5', timeLogged: '0d3h0m5' },\n            { projectTitle: 'Logging App', userName: '6', timeLogged: '0d3h0m6' },\n            { projectTitle: 'Logging App', userName: '7', timeLogged: '0d3h0m7' },\n            { projectTitle: 'Logging App', userName: '8', timeLogged: '0d3h0m8' },\n            { projectTitle: 'Logging App', userName: '9', timeLogged: '0d3h0m9' },\n            { projectTitle: 'Logging App', userName: '10', timeLogged: '0d3h0ma' },\n            { projectTitle: 'Logging App', userName: '11', timeLogged: '0d3h0mb' },\n            { projectTitle: 'Logging App', userName: '12', timeLogged: '0d3h0mc' },\n            { projectTitle: 'Logging App', userName: '13', timeLogged: '0d3h0md' },\n            { projectTitle: 'Logging App', userName: '14', timeLogged: '0d3h0me' },\n            { projectTitle: 'Logging App', userName: '15', timeLogged: '0d3h0mf' },\n            { projectTitle: 'Logging App', userName: '16', timeLogged: '0d3h0mg' },\n            { projectTitle: 'Logging App', userName: '17', timeLogged: '0d3h0mh' },\n            { projectTitle: 'Logging App', userName: '18', timeLogged: '0d3h0mi' },\n            { projectTitle: 'Logging App', userName: '19', timeLogged: '0d3h0mj' },\n            { projectTitle: 'Logging App', userName: '20', timeLogged: '0d3h0mk' },\n            { projectTitle: 'Logging App', userName: '21', timeLogged: '0d3h0m' }\n        ],\n        []\n    );\n\n    const columns: Column<TableData>[] = useMemo(\n        () => [\n            { Header: 'Project Title', accessor: 'projectTitle' },\n            { Header: 'User Name', accessor: 'userName' },\n            { Header: 'Time Logged', accessor: 'timeLogged' }\n        ],\n        []\n    );\n    \n    return (\n        <BootstrapReactTable columns={columns} data={data} />\n    )\n}\n\nexport default LoggingDataWrapper;","import React from 'react';\nimport LoggingDataWrapper from '../components/LoggingDataWrapper';\n\nexport const TimeLoggingPage: React.FC = () => {\n    return (\n        <>\n            <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n                <h1 className=\"display-4\">Project Time Logging</h1>\n                <p className=\"lead\">Quickly view the overall time spect by a specific user on different applications.</p>\n            </div>\n\n            <div className=\"container\">\n                <LoggingDataWrapper />\n            </div>\n        </>\n    )\n}\n\nexport default TimeLoggingPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nexport const NavBar: React.FC = () => {\n    return (\n        <Navbar expand=\"md\" bg=\"white\" className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 border-bottom box-shadow\">\n            <Navbar.Brand>Dope Ass Web Apps</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n\n                <Nav className=\"mr-auto\">\n                </Nav>\n                <Nav>\n                    <Link to=\"/\" className=\"p-2 text-dark\">Home</Link>\n                    <Link to=\"/time-logging\" className=\"p-2 text-dark\">Time Logging</Link>\n                </Nav>\n\n                <a className=\"btn btn-outline-primary\" href=\"#\">Login</a>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n    return (\n        <>\n            <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n                <h1 className=\"display-4\">Welcome to Dope Web Apps</h1>\n            </div>\n        </>\n    )\n}\n\nexport default HomePage;","import React from 'react';\n\nexport const Footer: React.FC = () => {\n    return (\n        <div className=\"container\">\n            <footer className=\"pt-4 my-md-5 pt-md-5 border-top\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md\">\n                        <img className=\"mb-2\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"24\" height=\"24\" />\n                        <small className=\"d-block mb-3 text-muted\">© 2019-2020</small>\n                    </div>\n                    <div className=\"col-6 col-md\">\n                        <h5>Features</h5>\n                        <ul className=\"list-unstyled text-small\">\n                            <li><a className=\"text-muted\" href=\"#\">Cool stuff</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-md\">\n                        <h5>Resources</h5>\n                        <ul className=\"list-unstyled text-small\">\n                            <li><a className=\"text-muted\" href=\"#\">Resource</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-md\">\n                        <h5>About</h5>\n                        <ul className=\"list-unstyled text-small\">\n                            <li><a className=\"text-muted\" href=\"#\">Team</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport TimeLoggingPage from './pages/TimeLoggingPage';\nimport NavBar from './components/NavBar';\nimport HomePage from './pages/HomePage';\nimport Footer from './components/Footer';\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <NavBar />\n            <Switch>\n                <Route path=\"/\" exact component={HomePage} />\n                <Route path=\"/time-logging\" component={TimeLoggingPage} />\n                <Route path=\"/\" render={() => <div>404</div>} />\n            </Switch>\n            <Footer />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}